// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// https://sass-lang.com/documentation/values/maps
$icons: (
    play: 'f101',
    play-circle: 'f102',
    pause: 'f103',
    volume-mute: 'f104',
    volume-low: 'f105',
    volume-mid: 'f106',
    volume-high: 'f107',
    fullscreen-enter: 'f108',
    fullscreen-exit: 'f109',
    spinner: 'f10a',
    subtitles: 'f10b',
    captions: 'f10c',
    hd: 'f10d',
    chapters: 'f10e',
    downloading: 'f10f',
    file-download: 'f110',
    file-download-done: 'f111',
    file-download-off: 'f112',
    share: 'f113',
    cog: 'f114',
    square: 'f115',
    circle: 'f116',
    circle-outline: 'f117',
    circle-inner-circle: 'f118',
    cancel: 'f119',
    repeat: 'f11a',
    replay: 'f11b',
    replay-5: 'f11c',
    replay-10: 'f11d',
    replay-30: 'f11e',
    forward-5: 'f11f',
    forward-10: 'f120',
    forward-30: 'f121',
    audio: 'f122',
    next-item: 'f123',
    previous-item: 'f124',
    shuffle: 'f125',
    cast: 'f126',
    picture-in-picture-enter: 'f127',
    picture-in-picture-exit: 'f128',
    facebook: 'f129',
    linkedin: 'f12a',
    twitter: 'f12b',
    tumblr: 'f12c',
    pinterest: 'f12d',
    audio-description: 'f12e',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\f101"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
