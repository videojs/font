// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
          play: 'f101',
          play-circle: 'f102',
          pause: 'f103',
          volume-mute: 'f104',
          volume-low: 'f105',
          volume-mid: 'f106',
          volume-high: 'f107',
          fullscreen-enter: 'f108',
          fullscreen-exit: 'f109',
          spinner: 'f10a',
          subtitles: 'f10b',
          captions: 'f10c',
          hd: 'f10d',
          chapters: 'f10e',
          downloading: 'f10f',
          file-download: 'f110',
          file-download-done: 'f111',
          file-download-off: 'f112',
          share: 'f113',
          cog: 'f114',
          square: 'f115',
          circle: 'f116',
          circle-outline: 'f117',
          circle-inner-circle: 'f118',
          cancel: 'f119',
          repeat: 'f11a',
          replay: 'f11b',
          replay-5: 'f11c',
          replay-10: 'f11d',
          replay-30: 'f11e',
          forward-5: 'f11f',
          forward-10: 'f120',
          forward-30: 'f121',
          audio: 'f122',
          next-item: 'f123',
          previous-item: 'f124',
          shuffle: 'f125',
          cast: 'f126',
          picture-in-picture-enter: 'f127',
          picture-in-picture-exit: 'f128',
          facebook: 'f129',
          linkedin: 'f12a',
          twitter: 'f12b',
          tumblr: 'f12c',
          pinterest: 'f12d',
          audio-description: 'f12e',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
