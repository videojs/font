// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// https://sass-lang.com/documentation/values/maps
$icons: (
    play: 'f101',
    play-circle: 'f102',
    pause: 'f103',
    volume-mute: 'f104',
    volume-low: 'f105',
    volume-mid: 'f106',
    volume-high: 'f107',
    fullscreen-enter: 'f108',
    fullscreen-exit: 'f109',
    spinner: 'f10a',
    subtitles: 'f10b',
    captions: 'f10c',
    hd: 'f10d',
    chapters: 'f10e',
    downloading: 'f10f',
    file-download: 'f110',
    file-download-done: 'f111',
    file-download-off: 'f112',
    share: 'f113',
    cog: 'f114',
    square: 'f115',
    circle: 'f116',
    circle-outline: 'f117',
    circle-inner-circle: 'f118',
    cancel: 'f119',
    repeat: 'f11a',
    replay: 'f11b',
    replay-5: 'f11c',
    replay-10: 'f11d',
    replay-30: 'f11e',
    forward-5: 'f11f',
    forward-10: 'f120',
    forward-30: 'f121',
    audio: 'f122',
    next-item: 'f123',
    previous-item: 'f124',
    shuffle: 'f125',
    cast: 'f126',
    picture-in-picture-enter: 'f127',
    picture-in-picture-exit: 'f128',
    facebook: 'f129',
    linkedin: 'f12a',
    twitter: 'f12b',
    tumblr: 'f12c',
    pinterest: 'f12d',
    audio-description: 'f12e',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\f101"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
